<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.487" tests="25" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\test-classes;C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\classes;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.0\spring-boot-starter-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.0\spring-boot-starter-aop-3.1.0.jar;C:\Users\hiago\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.0\spring-boot-starter-jdbc-3.1.0.jar;C:\Users\hiago\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jdbc\6.0.9\spring-jdbc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\hibernate\orm\hibernate-core\6.2.2.Final\hibernate-core-6.2.2.Final.jar;C:\Users\hiago\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\hiago\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\hiago\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\hiago\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\hiago\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\hiago\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\hiago\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\hiago\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-jpa\3.1.0\spring-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-commons\3.1.0\spring-data-commons-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-orm\6.0.9\spring-orm-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-context\6.0.9\spring-context-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-tx\6.0.9\spring-tx-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-beans\6.0.9\spring-beans-6.0.9.jar;C:\Users\hiago\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\hiago\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aspects\6.0.9\spring-aspects-6.0.9.jar;C:\Users\hiago\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\hiago\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\hiago\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.0\spring-boot-starter-web-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.0\spring-boot-starter-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot\3.1.0\spring-boot-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.0\spring-boot-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.0\spring-boot-starter-logging-3.1.0.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\hiago\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\hiago\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.0\spring-boot-starter-json-3.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.0\jackson-datatype-jdk8-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.0\jackson-module-parameter-names-2.15.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.0\spring-boot-starter-tomcat-3.1.0.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-web\6.0.9\spring-web-6.0.9.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-observation\1.11.0\micrometer-observation-1.11.0.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-commons\1.11.0\micrometer-commons-1.11.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-webmvc\6.0.9\spring-webmvc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-expression\6.0.9\spring-expression-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.0\spring-boot-starter-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test\3.1.0\spring-boot-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.0\spring-boot-test-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\hiago\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\hiago\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\hiago\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\hiago\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\hiago\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\hiago\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\hiago\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\hiago\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\hiago\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\hiago\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\hiago\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-core\6.0.9\spring-core-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jcl\6.0.9\spring-jcl-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-test\6.0.9\spring-test-6.0.9.jar;C:\Users\hiago\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-test\6.1.0\spring-security-test-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-core\6.1.0\spring-security-core-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-web\6.1.0\spring-security-web-6.1.0.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-core\5.5.0\mockito-core-5.5.0.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy\1.14.4\byte-buddy-1.14.4.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.4\byte-buddy-agent-1.14.4.jar;C:\Users\hiago\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.1.0\spring-boot-starter-security-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aop\6.0.9\spring-aop-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-config\6.1.0\spring-security-config-6.1.0.jar;C:\Users\hiago\.m2\repository\com\auth0\java-jwt\4.4.0\java-jwt-4.4.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.0\jackson-databind-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.0\jackson-datatype-jsr310-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.0\jackson-annotations-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.0\jackson-core-2.15.0.jar;C:\Users\hiago\.m2\repository\org\modelmapper\modelmapper\3.0.0\modelmapper-3.0.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.1.0\springdoc-openapi-starter-webmvc-ui-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.1.0\springdoc-openapi-starter-webmvc-api-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.1.0\springdoc-openapi-starter-common-2.1.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.9\swagger-core-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.9\swagger-annotations-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.9\swagger-models-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.0\jackson-dataformat-yaml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\webjars\swagger-ui\4.18.2\swagger-ui-4.18.2.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.1.1\spring-boot-starter-validation-3.1.1.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\hiago\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.0.Final\hibernate-validator-8.0.0.Final.jar;C:\Users\hiago\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-crypto\6.1.0\spring-security-crypto-6.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.15.0\jackson-dataformat-xml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\hiago\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.5.1\woodstox-core-6.5.1.jar;"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot\bin"/>
    <property name="sun.java.command" value="C:\Users\hiago\AppData\Local\Temp\surefire12524978024316378953\surefirebooter-20240116214107521_3.jar C:\Users\hiago\AppData\Local\Temp\surefire12524978024316378953 2024-01-16T21-41-07_322-jvmRun1 surefire-20240116214107521_1tmp surefire_0-20240116214107521_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\test-classes;C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\classes;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.0\spring-boot-starter-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.0\spring-boot-starter-aop-3.1.0.jar;C:\Users\hiago\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.0\spring-boot-starter-jdbc-3.1.0.jar;C:\Users\hiago\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jdbc\6.0.9\spring-jdbc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\hibernate\orm\hibernate-core\6.2.2.Final\hibernate-core-6.2.2.Final.jar;C:\Users\hiago\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\hiago\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\hiago\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\hiago\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\hiago\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\hiago\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\hiago\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\hiago\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-jpa\3.1.0\spring-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-commons\3.1.0\spring-data-commons-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-orm\6.0.9\spring-orm-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-context\6.0.9\spring-context-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-tx\6.0.9\spring-tx-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-beans\6.0.9\spring-beans-6.0.9.jar;C:\Users\hiago\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\hiago\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aspects\6.0.9\spring-aspects-6.0.9.jar;C:\Users\hiago\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\hiago\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\hiago\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.0\spring-boot-starter-web-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.0\spring-boot-starter-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot\3.1.0\spring-boot-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.0\spring-boot-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.0\spring-boot-starter-logging-3.1.0.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\hiago\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\hiago\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.0\spring-boot-starter-json-3.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.0\jackson-datatype-jdk8-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.0\jackson-module-parameter-names-2.15.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.0\spring-boot-starter-tomcat-3.1.0.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-web\6.0.9\spring-web-6.0.9.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-observation\1.11.0\micrometer-observation-1.11.0.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-commons\1.11.0\micrometer-commons-1.11.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-webmvc\6.0.9\spring-webmvc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-expression\6.0.9\spring-expression-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.0\spring-boot-starter-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test\3.1.0\spring-boot-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.0\spring-boot-test-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\hiago\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\hiago\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\hiago\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\hiago\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\hiago\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\hiago\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\hiago\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\hiago\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\hiago\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\hiago\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\hiago\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-core\6.0.9\spring-core-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jcl\6.0.9\spring-jcl-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-test\6.0.9\spring-test-6.0.9.jar;C:\Users\hiago\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-test\6.1.0\spring-security-test-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-core\6.1.0\spring-security-core-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-web\6.1.0\spring-security-web-6.1.0.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-core\5.5.0\mockito-core-5.5.0.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy\1.14.4\byte-buddy-1.14.4.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.4\byte-buddy-agent-1.14.4.jar;C:\Users\hiago\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.1.0\spring-boot-starter-security-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aop\6.0.9\spring-aop-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-config\6.1.0\spring-security-config-6.1.0.jar;C:\Users\hiago\.m2\repository\com\auth0\java-jwt\4.4.0\java-jwt-4.4.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.0\jackson-databind-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.0\jackson-datatype-jsr310-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.0\jackson-annotations-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.0\jackson-core-2.15.0.jar;C:\Users\hiago\.m2\repository\org\modelmapper\modelmapper\3.0.0\modelmapper-3.0.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.1.0\springdoc-openapi-starter-webmvc-ui-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.1.0\springdoc-openapi-starter-webmvc-api-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.1.0\springdoc-openapi-starter-common-2.1.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.9\swagger-core-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.9\swagger-annotations-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.9\swagger-models-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.0\jackson-dataformat-yaml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\webjars\swagger-ui\4.18.2\swagger-ui-4.18.2.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.1.1\spring-boot-starter-validation-3.1.1.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\hiago\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.0.Final\hibernate-validator-8.0.0.Final.jar;C:\Users\hiago\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-crypto\6.1.0\spring-security-crypto-6.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.15.0\jackson-dataformat-xml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\hiago\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.5.1\woodstox-core-6.5.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\hiago"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-07-19"/>
    <property name="java.home" value="C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\hiago\AppData\Local\Temp\surefire12524978024316378953\surefirebooter-20240116214107521_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.4+8"/>
    <property name="user.name" value="hiago"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.4+8"/>
    <property name="localRepository" value="C:\Users\hiago\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\hiago\AppData\Local\Temp\"/>
    <property name="java.version" value="17.0.4"/>
    <property name="user.dir" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="19304"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\MinGW\bin;C:\Program Files\swipl\bin;C:\apache-maven-3.9.0\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\hiago\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\hiago\AppData\Local\Programs\Python\Python312\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot\bin;C:\Users\hiago\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Users\hiago\AppData\Local\Programs\Microsoft VS Code\bin;C:\apache-maven-3.9.0\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin;;C:\Program Files\PostgreSQL\15\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.4+8"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="shouldFindAllPaymentsAsJsonAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.012">
    <system-out><![CDATA[2024-01-16T21:41:16.110-03:00  INFO 19304 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest]: PaymentControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-01-16T21:41:16.113-03:00  INFO 19304 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.soaresdev.productorderapi.ProductOrderApiApplication for test class com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.0)

2024-01-16T21:41:16.136-03:00  INFO 19304 --- [           main] c.s.p.c.v1.PaymentControllerTest         : Starting PaymentControllerTest using Java 17.0.4 with PID 19304 (started by hiago in C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api)
2024-01-16T21:41:16.137-03:00  INFO 19304 --- [           main] c.s.p.c.v1.PaymentControllerTest         : The following 1 profile is active: "prod"
2024-01-16T21:41:16.353-03:00  INFO 19304 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5a90ea5c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@537e52de, org.springframework.security.web.context.SecurityContextHolderFilter@5623fd90, org.springframework.security.web.header.HeaderWriterFilter@44ad3c5e, org.springframework.security.web.authentication.logout.LogoutFilter@16c3e494, com.soaresdev.productorderapi.security.jwt.JwtTokenFilter@59eff566, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4842a683, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65a03c19, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1277a6a1, org.springframework.security.web.session.SessionManagementFilter@64cbc28e, org.springframework.security.web.access.ExceptionTranslationFilter@7dcc6679, org.springframework.security.web.access.intercept.AuthorizationFilter@2f4c83f1]
2024-01-16T21:41:16.390-03:00  INFO 19304 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-01-16T21:41:16.390-03:00  INFO 19304 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-01-16T21:41:16.390-03:00  INFO 19304 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2024-01-16T21:41:16.394-03:00  INFO 19304 --- [           main] c.s.p.c.v1.PaymentControllerTest         : Started PaymentControllerTest in 0.276 seconds (process running for 8.687)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#findAll(Pageable)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"content":[{"id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","moment":"2024-01-17T00:41:16.396339800Z","paymentType":"PIX","amount":1}],"pageable":"INSTANCE","totalElements":1,"totalPages":1,"last":true,"size":1,"number":0,"sort":{"empty":true,"sorted":false,"unsorted":true},"numberOfElements":1,"first":true,"empty":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenNotAdminOrManagerAndDifferentUsersInInsertPayment" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.011">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#insert(PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.security.access.AccessDeniedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.416272300Z","status":403,"error":"AccessDeniedException","message":"Access denied","path":"/v1/payments"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInFindAllPayments" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.003">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn400WhenSendInvalidPaymentInInsertPayment" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"46"]
             Body = {"paymentType":null,"order_id":"invalid-uuid"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#insert(PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.427812300Z","status":400,"errors":["order_id: Invalid order uuid","paymentType: Payment type can not be null"],"path":"/v1/payments"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInDeletePaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.002">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndPaymentOrderNotFoundInUpdatePaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#updateByUUID(String, PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.441074500Z","status":404,"error":"EntityNotFoundException","message":"Order not found","path":"/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldFindAllPaymentsAsXmlAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.015">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Accept:"application/xml"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#findAll(Pageable)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <PageImpl><content><content><id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</id><order_id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</order_id><moment>2024-01-17T00:41:16.445740700Z</moment><paymentType>PIX</paymentType><amount>1</amount></content></content><pageable>INSTANCE</pageable><totalElements>1</totalElements><totalPages>1</totalPages><last>true</last><size>1</size><number>0</number><sort><empty>true</empty><sorted>false</sorted><unsorted>true</unsorted></sort><numberOfElements>1</numberOfElements><first>true</first><empty>false</empty></PageImpl>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInUpdatePaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.002">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndPaymentNotFoundInDeletePaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#deleteByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.469228800Z","status":404,"error":"EntityNotFoundException","message":"Payment not found","path":"/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndPaymentNotFoundInFindPaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#findByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.475779500Z","status":404,"error":"EntityNotFoundException","message":"Payment not found","path":"/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldFindPaymentByUUIDAsXmlAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.009">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Accept:"application/xml"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#findByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <PaymentDTO><id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</id><order_id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</order_id><moment>2024-01-17T00:41:16.480878800Z</moment><paymentType>PIX</paymentType><amount>1</amount></PaymentDTO>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldUpdatePaymentAsJsonByUUIDAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#updateByUUID(String, PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","moment":"2024-01-17T00:41:16.491835200Z","paymentType":"PIX","amount":1}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenAlreadyPaidInUpdatePaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#updateByUUID(String, PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soaresdev.productorderapi.exceptions.AlreadyPaidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.499424700Z","status":403,"error":"AlreadyPaidException","message":"Order already paid","path":"/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndPaymentNotFoundInUpdatePaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.007">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#updateByUUID(String, PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.507678100Z","status":404,"error":"EntityNotFoundException","message":"Payment not found","path":"/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldInsertPaymentAsXmlAndReturn201WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.012">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Content-Type:"application/xml;charset=UTF-8", Accept:"application/xml", Content-Length:"124"]
             Body = <PaymentInsertDTO><paymentType>PIX</paymentType><order_id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</order_id></PaymentInsertDTO>
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#insert(PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Location:"http://localhost/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <PaymentDTO><id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</id><order_id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</order_id><moment>2024-01-17T00:41:16.512855300Z</moment><paymentType>PIX</paymentType><amount>1</amount></PaymentDTO>
    Forwarded URL = null
   Redirected URL = http://localhost/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn400WhenSendInvalidPaymentInUpdatePaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.006">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"46"]
             Body = {"paymentType":null,"order_id":"invalid-uuid"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#updateByUUID(String, PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.529287300Z","status":400,"errors":["order_id: Invalid order uuid","paymentType: Payment type can not be null"],"path":"/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInFindPaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.003">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldDeletePaymentByUUIDAndReturn204WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#deleteByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldUpdatePaymentAsXmlByUUIDAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.011">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Content-Type:"application/xml;charset=UTF-8", Accept:"application/xml", Content-Length:"124"]
             Body = <PaymentInsertDTO><paymentType>PIX</paymentType><order_id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</order_id></PaymentInsertDTO>
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#updateByUUID(String, PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <PaymentDTO><id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</id><order_id>42c06ac7-d8e8-4ccc-a051-6ad9638eafaf</order_id><moment>2024-01-17T00:41:16.545397400Z</moment><paymentType>PIX</paymentType><amount>1</amount></PaymentDTO>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldInsertPaymentAsJsonAndReturn201WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#insert(PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Location:"http://localhost/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","moment":"2024-01-17T00:41:16.558091800Z","paymentType":"PIX","amount":1}
    Forwarded URL = null
   Redirected URL = http://localhost/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenNotAdminOrManagerAndDifferentUsersInFindPaymentByUUID" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#findByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.security.access.AccessDeniedException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.566096200Z","status":403,"error":"AccessDeniedException","message":"Access denied","path":"/v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldFindPaymentByUUIDAsJsonAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/payments/42c06ac7-d8e8-4ccc-a051-6ad9638eafaf
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#findByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf","moment":"2024-01-17T00:41:16.572515600Z","paymentType":"PIX","amount":1}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenAlreadyPaidInInsertPayment" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.006">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#insert(PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soaresdev.productorderapi.exceptions.AlreadyPaidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.581081600Z","status":403,"error":"AlreadyPaidException","message":"Order already paid","path":"/v1/payments"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInInsertPayment" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.002">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndPaymentOrderNotFoundInInsertPayment" classname="com.soaresdev.productorderapi.controllers.v1.PaymentControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/payments
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"71"]
             Body = {"paymentType":"PIX","order_id":"42c06ac7-d8e8-4ccc-a051-6ad9638eafaf"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.PaymentController
           Method = com.soaresdev.productorderapi.controllers.v1.PaymentController#insert(PaymentInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.592806700Z","status":404,"error":"EntityNotFoundException","message":"Order not found","path":"/v1/payments"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
</testsuite>