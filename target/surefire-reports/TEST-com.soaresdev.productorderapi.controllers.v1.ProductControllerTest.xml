<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.525" tests="31" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\test-classes;C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\classes;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.0\spring-boot-starter-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.0\spring-boot-starter-aop-3.1.0.jar;C:\Users\hiago\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.0\spring-boot-starter-jdbc-3.1.0.jar;C:\Users\hiago\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jdbc\6.0.9\spring-jdbc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\hibernate\orm\hibernate-core\6.2.2.Final\hibernate-core-6.2.2.Final.jar;C:\Users\hiago\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\hiago\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\hiago\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\hiago\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\hiago\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\hiago\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\hiago\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\hiago\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-jpa\3.1.0\spring-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-commons\3.1.0\spring-data-commons-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-orm\6.0.9\spring-orm-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-context\6.0.9\spring-context-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-tx\6.0.9\spring-tx-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-beans\6.0.9\spring-beans-6.0.9.jar;C:\Users\hiago\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\hiago\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aspects\6.0.9\spring-aspects-6.0.9.jar;C:\Users\hiago\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\hiago\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\hiago\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.0\spring-boot-starter-web-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.0\spring-boot-starter-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot\3.1.0\spring-boot-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.0\spring-boot-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.0\spring-boot-starter-logging-3.1.0.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\hiago\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\hiago\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.0\spring-boot-starter-json-3.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.0\jackson-datatype-jdk8-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.0\jackson-module-parameter-names-2.15.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.0\spring-boot-starter-tomcat-3.1.0.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-web\6.0.9\spring-web-6.0.9.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-observation\1.11.0\micrometer-observation-1.11.0.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-commons\1.11.0\micrometer-commons-1.11.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-webmvc\6.0.9\spring-webmvc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-expression\6.0.9\spring-expression-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.0\spring-boot-starter-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test\3.1.0\spring-boot-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.0\spring-boot-test-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\hiago\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\hiago\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\hiago\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\hiago\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\hiago\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\hiago\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\hiago\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\hiago\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\hiago\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\hiago\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\hiago\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-core\6.0.9\spring-core-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jcl\6.0.9\spring-jcl-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-test\6.0.9\spring-test-6.0.9.jar;C:\Users\hiago\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-test\6.1.0\spring-security-test-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-core\6.1.0\spring-security-core-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-web\6.1.0\spring-security-web-6.1.0.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-core\5.5.0\mockito-core-5.5.0.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy\1.14.4\byte-buddy-1.14.4.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.4\byte-buddy-agent-1.14.4.jar;C:\Users\hiago\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.1.0\spring-boot-starter-security-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aop\6.0.9\spring-aop-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-config\6.1.0\spring-security-config-6.1.0.jar;C:\Users\hiago\.m2\repository\com\auth0\java-jwt\4.4.0\java-jwt-4.4.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.0\jackson-databind-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.0\jackson-datatype-jsr310-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.0\jackson-annotations-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.0\jackson-core-2.15.0.jar;C:\Users\hiago\.m2\repository\org\modelmapper\modelmapper\3.0.0\modelmapper-3.0.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.1.0\springdoc-openapi-starter-webmvc-ui-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.1.0\springdoc-openapi-starter-webmvc-api-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.1.0\springdoc-openapi-starter-common-2.1.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.9\swagger-core-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.9\swagger-annotations-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.9\swagger-models-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.0\jackson-dataformat-yaml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\webjars\swagger-ui\4.18.2\swagger-ui-4.18.2.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.1.1\spring-boot-starter-validation-3.1.1.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\hiago\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.0.Final\hibernate-validator-8.0.0.Final.jar;C:\Users\hiago\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-crypto\6.1.0\spring-security-crypto-6.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.15.0\jackson-dataformat-xml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\hiago\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.5.1\woodstox-core-6.5.1.jar;"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="BR"/>
    <property name="sun.boot.library.path" value="C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot\bin"/>
    <property name="sun.java.command" value="C:\Users\hiago\AppData\Local\Temp\surefire12524978024316378953\surefirebooter-20240116214107521_3.jar C:\Users\hiago\AppData\Local\Temp\surefire12524978024316378953 2024-01-16T21-41-07_322-jvmRun1 surefire-20240116214107521_1tmp surefire_0-20240116214107521_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\test-classes;C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api\target\classes;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.1.0\spring-boot-starter-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.1.0\spring-boot-starter-aop-3.1.0.jar;C:\Users\hiago\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.1.0\spring-boot-starter-jdbc-3.1.0.jar;C:\Users\hiago\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jdbc\6.0.9\spring-jdbc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\hibernate\orm\hibernate-core\6.2.2.Final\hibernate-core-6.2.2.Final.jar;C:\Users\hiago\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\hiago\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\hiago\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\hiago\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\hiago\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\hiago\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\hiago\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\hiago\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\hiago\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\hiago\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-jpa\3.1.0\spring-data-jpa-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\data\spring-data-commons\3.1.0\spring-data-commons-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-orm\6.0.9\spring-orm-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-context\6.0.9\spring-context-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-tx\6.0.9\spring-tx-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-beans\6.0.9\spring-beans-6.0.9.jar;C:\Users\hiago\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\hiago\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aspects\6.0.9\spring-aspects-6.0.9.jar;C:\Users\hiago\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\hiago\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\hiago\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.0\spring-boot-starter-web-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.0\spring-boot-starter-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot\3.1.0\spring-boot-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.0\spring-boot-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.0\spring-boot-starter-logging-3.1.0.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\hiago\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\hiago\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\hiago\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\hiago\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.0\spring-boot-starter-json-3.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.0\jackson-datatype-jdk8-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.0\jackson-module-parameter-names-2.15.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.0\spring-boot-starter-tomcat-3.1.0.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-web\6.0.9\spring-web-6.0.9.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-observation\1.11.0\micrometer-observation-1.11.0.jar;C:\Users\hiago\.m2\repository\io\micrometer\micrometer-commons\1.11.0\micrometer-commons-1.11.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-webmvc\6.0.9\spring-webmvc-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-expression\6.0.9\spring-expression-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.0\spring-boot-starter-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test\3.1.0\spring-boot-test-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.0\spring-boot-test-autoconfigure-3.1.0.jar;C:\Users\hiago\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\hiago\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\hiago\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\hiago\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\hiago\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\hiago\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\hiago\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\hiago\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\hiago\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\hiago\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\hiago\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\hiago\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\hiago\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-core\6.0.9\spring-core-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-jcl\6.0.9\spring-jcl-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-test\6.0.9\spring-test-6.0.9.jar;C:\Users\hiago\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-test\6.1.0\spring-security-test-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-core\6.1.0\spring-security-core-6.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-web\6.1.0\spring-security-web-6.1.0.jar;C:\Users\hiago\.m2\repository\org\mockito\mockito-core\5.5.0\mockito-core-5.5.0.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy\1.14.4\byte-buddy-1.14.4.jar;C:\Users\hiago\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.4\byte-buddy-agent-1.14.4.jar;C:\Users\hiago\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.1.0\spring-boot-starter-security-3.1.0.jar;C:\Users\hiago\.m2\repository\org\springframework\spring-aop\6.0.9\spring-aop-6.0.9.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-config\6.1.0\spring-security-config-6.1.0.jar;C:\Users\hiago\.m2\repository\com\auth0\java-jwt\4.4.0\java-jwt-4.4.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.0\jackson-databind-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.0\jackson-datatype-jsr310-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.0\jackson-annotations-2.15.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.0\jackson-core-2.15.0.jar;C:\Users\hiago\.m2\repository\org\modelmapper\modelmapper\3.0.0\modelmapper-3.0.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.1.0\springdoc-openapi-starter-webmvc-ui-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.1.0\springdoc-openapi-starter-webmvc-api-2.1.0.jar;C:\Users\hiago\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.1.0\springdoc-openapi-starter-common-2.1.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.9\swagger-core-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.9\swagger-annotations-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.9\swagger-models-jakarta-2.2.9.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.0\jackson-dataformat-yaml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\webjars\swagger-ui\4.18.2\swagger-ui-4.18.2.jar;C:\Users\hiago\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.1.1\spring-boot-starter-validation-3.1.1.jar;C:\Users\hiago\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\hiago\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.0.Final\hibernate-validator-8.0.0.Final.jar;C:\Users\hiago\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\hiago\.m2\repository\org\springframework\security\spring-security-crypto\6.1.0\spring-security-crypto-6.1.0.jar;C:\Users\hiago\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.15.0\jackson-dataformat-xml-2.15.0.jar;C:\Users\hiago\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\hiago\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.5.1\woodstox-core-6.5.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\hiago"/>
    <property name="user.language" value="pt"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-07-19"/>
    <property name="java.home" value="C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\hiago\AppData\Local\Temp\surefire12524978024316378953\surefirebooter-20240116214107521_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.4+8"/>
    <property name="user.name" value="hiago"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.4+8"/>
    <property name="localRepository" value="C:\Users\hiago\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\hiago\AppData\Local\Temp\"/>
    <property name="java.version" value="17.0.4"/>
    <property name="user.dir" value="C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="19304"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\MinGW\bin;C:\Program Files\swipl\bin;C:\apache-maven-3.9.0\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\hiago\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\hiago\AppData\Local\Programs\Python\Python312\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\hiago\AppData\Local\Programs\Eclipse Adoptium\jdk-17.0.4.8-hotspot\bin;C:\Users\hiago\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Users\hiago\AppData\Local\Programs\Microsoft VS Code\bin;C:\apache-maven-3.9.0\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2022.3.2\bin;;C:\Program Files\PostgreSQL\15\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.4+8"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInDeleteProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.004">
    <system-out><![CDATA[2024-01-16T21:41:16.598-03:00  INFO 19304 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.soaresdev.productorderapi.controllers.v1.ProductControllerTest]: ProductControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-01-16T21:41:16.601-03:00  INFO 19304 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.soaresdev.productorderapi.ProductOrderApiApplication for test class com.soaresdev.productorderapi.controllers.v1.ProductControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.0)

2024-01-16T21:41:16.624-03:00  INFO 19304 --- [           main] c.s.p.c.v1.ProductControllerTest         : Starting ProductControllerTest using Java 17.0.4 with PID 19304 (started by hiago in C:\Users\hiago\OneDrive\Documentos\Programacao\Projetos JAVA\product-order-api)
2024-01-16T21:41:16.624-03:00  INFO 19304 --- [           main] c.s.p.c.v1.ProductControllerTest         : The following 1 profile is active: "prod"
2024-01-16T21:41:16.828-03:00  INFO 19304 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@18a9762, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72378bfd, org.springframework.security.web.context.SecurityContextHolderFilter@42bb0492, org.springframework.security.web.header.HeaderWriterFilter@1ca6323c, org.springframework.security.web.authentication.logout.LogoutFilter@3a5922ec, com.soaresdev.productorderapi.security.jwt.JwtTokenFilter@147c00c7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6eed5b68, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4377b35b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@104972a0, org.springframework.security.web.session.SessionManagementFilter@27b89e0a, org.springframework.security.web.access.ExceptionTranslationFilter@3d123d10, org.springframework.security.web.access.intercept.AuthorizationFilter@40f88929]
2024-01-16T21:41:16.863-03:00  INFO 19304 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-01-16T21:41:16.863-03:00  INFO 19304 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-01-16T21:41:16.864-03:00  INFO 19304 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2024-01-16T21:41:16.867-03:00  INFO 19304 --- [           main] c.s.p.c.v1.ProductControllerTest         : Started ProductControllerTest in 0.262 seconds (process running for 9.16)

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInInsertProduct" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"83"]
             Body = {"name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com"}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInUpdateProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.003">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"67"]
             Body = {"name":"-Testing","description":null,"price":0,"imgUrl":"testing"}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldRemoveCategoryFromProductByUUIDAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.014">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#removeCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com","categories":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn400WhenSendInvalidCategoryInAddCategoryInProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.006">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"32"]
             Body = {"category_uuid":"invalid-uuid"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#addCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.904618800Z","status":400,"errors":["category_uuid: Invalid category uuid"],"path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldFindProductByUUIDAsJsonAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.007">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#findByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com","categories":[{"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInRemoveCategoryFromProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldDeleteProductByUUIDAndReturn204WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#deleteByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInAddCategoryInProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.003">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInFindProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.002">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldFindProductByUUIDAsXmlAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.014">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = [Accept:"application/xml"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#findByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <ProductDTO><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name><description>Testing</description><price>1</price><imgUrl>https://testing.com</imgUrl><categories><categories><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name></categories></categories></ProductDTO>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldInsertProductAsJsonAndReturn201WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.01">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"83"]
             Body = {"name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#insert(ProductInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Location:"http://localhost/v1/products/09ef0207-2adc-487f-b063-46622970ee44", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com","categories":[{"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing"}]}
    Forwarded URL = null
   Redirected URL = http://localhost/v1/products/09ef0207-2adc-487f-b063-46622970ee44
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndCategoryNotFoundInProductInRemoveCategoryFromProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.007">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#removeCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.970185500Z","status":404,"error":"EntityNotFoundException","message":"Category not found in this product","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn400WhenSendInvalidCategoryInRemoveCategoryFromProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"32"]
             Body = {"category_uuid":"invalid-uuid"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#removeCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:16.977859500Z","status":400,"errors":["category_uuid: Invalid category uuid"],"path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldUpdateProductAsXmlByUUIDAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.016">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = [Content-Type:"application/xml;charset=UTF-8", Accept:"application/xml", Content-Length:"143"]
             Body = <ProductInsertDTO><name>Testing</name><description>Testing</description><price>1</price><imgUrl>https://testing.com</imgUrl></ProductInsertDTO>
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#updateByUUID(String, ProductInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <ProductDTO><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name><description>Testing</description><price>1</price><imgUrl>https://testing.com</imgUrl><categories><categories><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name></categories></categories></ProductDTO>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn403WhenIsNotAuthenticatedInFindAllProducts" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.003">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/products
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Access Denied
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn400WhenSendInvalidProductInInsertProduct" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"67"]
             Body = {"name":"-Testing","description":null,"price":0,"imgUrl":"testing"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#insert(ProductInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.006722000Z","status":400,"errors":["description: Description can not be null","imgUrl: Invalid image url","name: Invalid name","price: Price must be greater than zero"],"path":"/v1/products"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndProductNotFoundInRemoveCategoryFromProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#removeCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.012359800Z","status":404,"error":"EntityNotFoundException","message":"Product not found","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndCategoryNotFoundInAddCategoryInProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.006">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#addCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.021221800Z","status":404,"error":"EntityNotFoundException","message":"Category not found","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldInsertProductAsXmlAndReturn201WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.012">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products
       Parameters = {}
          Headers = [Content-Type:"application/xml;charset=UTF-8", Accept:"application/xml", Content-Length:"143"]
             Body = <ProductInsertDTO><name>Testing</name><description>Testing</description><price>1</price><imgUrl>https://testing.com</imgUrl></ProductInsertDTO>
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#insert(ProductInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Location:"http://localhost/v1/products/09ef0207-2adc-487f-b063-46622970ee44", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <ProductDTO><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name><description>Testing</description><price>1</price><imgUrl>https://testing.com</imgUrl><categories><categories><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name></categories></categories></ProductDTO>
    Forwarded URL = null
   Redirected URL = http://localhost/v1/products/09ef0207-2adc-487f-b063-46622970ee44
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn409WhenCategoryExistsInProductInAddCategoryInProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#addCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityExistsException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 409
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.042567200Z","status":409,"error":"EntityExistsException","message":"Category already exists in this product","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldAddCategoryInProductByUUIDAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#addCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com","categories":[{"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndCategoryNotFoundInRemoveCategoryFromProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#removeCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.056865800Z","status":404,"error":"EntityNotFoundException","message":"Category not found","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldFindAllProductsAsJsonAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.006">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/products
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#findAll(Pageable)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"content":[{"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com","categories":[{"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing"}]}],"pageable":"INSTANCE","totalElements":1,"totalPages":1,"last":true,"size":1,"number":0,"sort":{"empty":true,"sorted":false,"unsorted":true},"numberOfElements":1,"first":true,"empty":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndProductNotFoundInFindProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#findByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.071251900Z","status":404,"error":"EntityNotFoundException","message":"Product not found","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndProductNotFoundInDeleteProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.003">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#deleteByUUID(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.077936100Z","status":404,"error":"EntityNotFoundException","message":"Product not found","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldUpdateProductAsJsonByUUIDAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.006">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", Content-Length:"83"]
             Body = {"name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#updateByUUID(String, ProductInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com","categories":[{"id":"09ef0207-2adc-487f-b063-46622970ee44","name":"Testing"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndProductNotFoundInUpdateProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"83"]
             Body = {"name":"Testing","description":"Testing","price":1,"imgUrl":"https://testing.com"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#updateByUUID(String, ProductInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.091637500Z","status":404,"error":"EntityNotFoundException","message":"Product not found","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenIsAuthenticatedAndProductNotFoundInAddCategoryInProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.005">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"56"]
             Body = {"category_uuid":"09ef0207-2adc-487f-b063-46622970ee44"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#addCategoryByUUID(String, ProductCategoryInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = jakarta.persistence.EntityNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.098673500Z","status":404,"error":"EntityNotFoundException","message":"Product not found","path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44/categories"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldFindAllProductsAsXmlAndReturn200WhenIsAuthenticated" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.013">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /v1/products
       Parameters = {}
          Headers = [Accept:"application/xml"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#findAll(Pageable)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/xml", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/xml
             Body = <PageImpl><content><content><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name><description>Testing</description><price>1</price><imgUrl>https://testing.com</imgUrl><categories><categories><id>09ef0207-2adc-487f-b063-46622970ee44</id><name>Testing</name></categories></categories></content></content><pageable>INSTANCE</pageable><totalElements>1</totalElements><totalPages>1</totalPages><last>true</last><size>1</size><number>0</number><sort><empty>true</empty><sorted>false</sorted><unsorted>true</unsorted></sort><numberOfElements>1</numberOfElements><first>true</first><empty>false</empty></PageImpl>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
  <testcase name="shouldReturn400WhenSendInvalidProductInUpdateProductByUUID" classname="com.soaresdev.productorderapi.controllers.v1.ProductControllerTest" time="0.004">
    <system-out><![CDATA[
MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /v1/products/09ef0207-2adc-487f-b063-46622970ee44
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"67"]
             Body = {"name":"-Testing","description":null,"price":0,"imgUrl":"testing"}
    Session Attrs = {}

Handler:
             Type = com.soaresdev.productorderapi.controllers.v1.ProductController
           Method = com.soaresdev.productorderapi.controllers.v1.ProductController#updateByUUID(String, ProductInsertDTO)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2024-01-17T00:41:17.120162400Z","status":400,"errors":["description: Description can not be null","imgUrl: Invalid image url","name: Invalid name","price: Price must be greater than zero"],"path":"/v1/products/09ef0207-2adc-487f-b063-46622970ee44"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  </testcase>
</testsuite>